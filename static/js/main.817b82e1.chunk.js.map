{"version":3,"sources":["components/constants.js","components/helpers/Tree.js","components/helpers/CourseMapper.js","store.js","components/Calendar.js","components/Control.js","App.js","registerServiceWorker.js","index.js"],"names":["week","moment","year","Node","elem","Object","classCallCheck","this","parent","children","Tree","leaves","_leaves","level","root","_this2","s","i","console","log","JSON","stringify","forEach","child","print","validLeaves","_this","leaf","times","actvNode","failed","day","_actvNode$elem$start$","start","split","map","Number","_actvNode$elem$start$2","slicedToArray","startHr","startMin","_actvNode$elem$end$sp","end","_actvNode$elem$end$sp2","actvLength","undefined","concat","push","SectionTree","section","course","_this3","possibleConstructorReturn","getPrototypeOf","call","activitySegregation","activities","meta","courseCode","course_code","courseName","course_title","professor","activity","generateActivityTypes","makeTree","verifyAndDelete","activityTypes","activityName","indexOf","node","_this4","actvNodes","keys","key","lecture","segregatedNodes","CourseTree","_this5","assertThisInitialized","sections","_this$root$children","_this$leaves","sectionT","apply","toConsumableArray","getLeaves","ScheduleTree","courses","_this6","segments","generateTree","actveNodes","actveNode","_actveNode$children","courseT","_this7","schedules","schedule","_actveNode$elem$start","_actveNode$elem$start2","startHour","_actveNode$elem$end$s","_actveNode$elem$end$s2","endHour","endMin","hour","minute","toDate","title","location","courseList","store","createStore","state","action","res","mode","type","BigCalendar","momentLocalizer","ScheduleCalendar","props","scheduleCombinations","num","subscribe","update","gState","getState","selectedCourses","c","Courses","find","obj","length","calendarify","setState","event","val","target","value","react_default","a","createElement","className","min","max","onChange","handleRangeChange","parseInt","role","aria-label","showSlider","lib_default","events","defaultDate","defaultView","views","work_week","timeslots","selectable","toolbar","React","Component","options","Control","updateCourses","label","dispatch","id","name","defaultChecked","handleSwitchChange","htmlFor","react_select_es","multi","handleSelectChange","placeholder","simpleValue","App","Control_Control","Calendar_ScheduleCalendar","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.817b82e1.chunk.js","sourcesContent":["import moment from \"moment\";\r\nexport const week=moment().year(2018).week(2);","import { week } from \"../constants\";\r\nclass Node {\r\n    constructor(elem) {\r\n        this.elem = elem;\r\n        this.parent = null;\r\n        this.children = [];\r\n    }\r\n}\r\n\r\nclass Tree {\r\n\r\n    constructor() {\r\n        this.leaves = [];\r\n        this._leaves = [];\r\n    }\r\n    print(level,root) {\r\n        let s = \"\";\r\n        for (let i = 1; i < level; i++) {\r\n            s += \"\\t\\t\"\r\n        }\r\n        console.log(s, JSON.stringify(root.elem));\r\n        root.children.forEach(child => {\r\n            this.print(level + 1, child);\r\n        })\r\n    }\r\n\r\n    verifyAndDelete() {\r\n        const validLeaves = [];\r\n        const _this = this;\r\n        this._leaves.forEach(leaf => {\r\n            let times = {};\r\n            let actvNode = leaf;\r\n            let failed = false;\r\n            while (actvNode !== _this.root) {\r\n                const day = actvNode.elem.day;\r\n                const [startHr, startMin] = actvNode.elem.start.split(\":\").map(Number);\r\n                const [endHr, endMin] = actvNode.elem.end.split(\":\").map(Number);\r\n                const actvLength = (endHr * 60 + endMin) - (startHr * 60 + startMin);\r\n                if (actvLength <= 90 && times[`${day}${startHr * 60 + startMin}`] === undefined) { // 1.5 hr\r\n                    times[`${day}${startHr * 60 + startMin}`] = actvNode;\r\n                    actvNode = actvNode.parent;\r\n\r\n                } else if (actvLength > 90 && times[`${day}${startHr * 60 + startMin}`] === undefined &&\r\n                    times[`${day}${startHr * 60 + startMin + 90}`] === undefined) { // 3hr activity\r\n                    times[`${day}${startHr * 60 + startMin}`] = actvNode;\r\n                    times[`${day}${startHr * 60 + startMin + 90}`] = actvNode;\r\n                    actvNode = actvNode.parent;\r\n\r\n\r\n                } else { //clash found delete leaf\r\n                    failed = true;\r\n                    actvNode = _this.root;\r\n                }\r\n            }\r\n            if (failed === false) {\r\n                validLeaves.push(leaf);\r\n            }\r\n        });\r\n        this.leaves = validLeaves;\r\n    }\r\n\r\n    getLeaves() {\r\n        return this.leaves;\r\n    }\r\n}\r\n\r\nclass SectionTree extends Tree {\r\n\r\n    constructor(section, course) {\r\n        super();\r\n        this.activitySegregation = [];\r\n        this.root = new Node(section.section);\r\n        this.activities = section.activities;\r\n        const meta = {\"courseCode\":course.course_code, \"courseName\":course.course_title, \"professor\": section.professor || \"\", \"section\":section.section};\r\n        this.activities.forEach(activity => {activity.meta = meta});\r\n        this.generateActivityTypes();\r\n        this.makeTree();\r\n        this.verifyAndDelete();\r\n    }\r\n\r\n    generateActivityTypes() {\r\n        const activityTypes = [];\r\n        const _this = this;\r\n        this.activities.forEach(activity => {\r\n            const activityName = activity.activity;\r\n            if (activityTypes.indexOf(activityName) < 0) {\r\n                activityTypes.push(activityName);\r\n                _this.activitySegregation[activityName] = [];\r\n                _this.activitySegregation[activityName].push(activity);\r\n\r\n            } else {\r\n                _this.activitySegregation[activityName].push(activity);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    makeTree() {\r\n        let actvNodes = [this.root];\r\n        let node;\r\n        Object.keys(this.activitySegregation).forEach(key => {\r\n            if (key === \"LEC\") {\r\n                actvNodes.forEach(actvNode => {\r\n                    this.activitySegregation[key].forEach(lecture => {\r\n                        node = new Node(lecture);\r\n                        node.parent = actvNode;\r\n                        actvNode.children.push(node);\r\n                        actvNode = node;\r\n                    });\r\n                });\r\n                actvNodes = [node];\r\n            } else {\r\n                const segregatedNodes = [];\r\n                actvNodes.forEach(actvNode => {\r\n                    this.activitySegregation[key].forEach(activity => {\r\n                        const node = new Node(activity);\r\n                        node.parent = actvNode;\r\n                        actvNode.children.push(node);\r\n                        segregatedNodes.push(node);\r\n                    })\r\n                });\r\n                actvNodes = segregatedNodes;\r\n            }\r\n        });\r\n        this._leaves = actvNodes;\r\n\r\n    }\r\n\r\n}\r\n\r\nclass CourseTree extends Tree {\r\n    constructor(course) {\r\n        super();\r\n        this.root = new Node(course);\r\n        this.leaves = [];\r\n        const _this = this;\r\n        course.sections.forEach(section => {\r\n            const sectionT = new SectionTree(section, course);\r\n            _this.root.children.push(...sectionT.root.children);\r\n            sectionT.root.children.forEach(child => {\r\n                child.parent = _this.root;\r\n            });\r\n            _this.leaves.push(...sectionT.getLeaves());\r\n        });\r\n    }\r\n}\r\n\r\nclass ScheduleTree extends Tree {\r\n    constructor(courses) {\r\n        super();\r\n        this.root = new Node(courses);\r\n        this.segments = {};\r\n        this.courses = courses;\r\n\r\n        this.generateTree();\r\n        this.verifyAndDelete();\r\n        // this.print(0, this.root);\r\n        // console.log(\"-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\")\r\n\r\n    }\r\n\r\n    generateTree() {\r\n        let actveNodes = [this.root];\r\n        this.courses.forEach(course => {\r\n            const leaves = [];\r\n            actveNodes.forEach(actveNode => {\r\n                const courseT = new CourseTree(course);\r\n                actveNode.children.push(...courseT.root.children);\r\n                courseT.root.children.forEach(child => {\r\n                    child.parent = actveNode;\r\n                });\r\n                leaves.push(...courseT.getLeaves());\r\n            });\r\n            actveNodes = leaves;\r\n        });\r\n\r\n        this._leaves = actveNodes;\r\n    }\r\n\r\n    calendarify(){\r\n        const schedules = [];\r\n        this.leaves.forEach(leaf => {\r\n            let actveNode = leaf;\r\n            const schedule = [];\r\n            while(actveNode !== this.root){\r\n                let [startHour, startMin] = actveNode.elem.start.split(\":\").map(Number);\r\n                let [endHour, endMin] = actveNode.elem.end.split(\":\").map(Number);\r\n                schedule.push({\r\n                    start:week.day(actveNode.elem.day).hour(startHour).minute(startMin).toDate(),\r\n                    end:week.day(actveNode.elem.day).hour(endHour).minute(endMin).toDate(),\r\n                    title: `${actveNode.elem.activity} | ${actveNode.elem.meta.professor} | ${actveNode.elem.location} | ${actveNode.elem.meta.section} | ${actveNode.elem.meta.courseName}`\r\n                });\r\n                actveNode = actveNode.parent;\r\n            }\r\n            schedules.push(schedule);\r\n        });\r\n\r\n        return schedules;\r\n    }\r\n}\r\n\r\nexport default ScheduleTree;","import fall from '../../schedules/2199.json';\r\nimport winter from '../../schedules/2201.json';\r\n\r\nconst courseList = [\r\n    fall,\r\n    winter\r\n];\r\n\r\nexport default courseList;","import { createStore } from 'redux';\r\n\r\nconst reducer = (state, action) => {\r\n    const res = { courses: [], mode: 0 }; //0 fall, 1 winter\r\n    if (state === undefined) {\r\n        return res;\r\n    }\r\n    res.courses = state.courses;\r\n    res.mode = state.mode;\r\n    if (action.type === \"UPDATE\"){\r\n        res.courses = action.courses;\r\n    }\r\n\r\n    if(action.type === \"MODE\"){ \r\n        res.courses = [];\r\n        res.mode = action.mode;\r\n    }\r\n\r\n    return res;\r\n}\r\n\r\nexport const store = createStore(reducer);\r\n\r\n\r\n","import BigCalendar from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport React from \"react\";\r\nimport { week } from \"./constants\";\r\nimport ScheduleTree from './helpers/Tree';\r\nimport \"./Calendar.css\"\r\nimport Courses from './helpers/CourseMapper'\r\nimport { store } from '../store';\r\n\r\n\r\nBigCalendar.momentLocalizer(moment);\r\nexport default class ScheduleCalendar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            scheduleCombinations: [],\r\n            num: 0,\r\n            courses: [],\r\n            mode:0\r\n        };\r\n        store.subscribe(() => this.update());\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.update();\r\n    }\r\n\r\n    update() {\r\n        const gState = store.getState();\r\n        console.log(gState);\r\n        const selectedCourses = [];\r\n        gState.courses.forEach(course => {\r\n            const c = Courses[gState.mode].courses.find((obj) => obj.course_code === course);\r\n            c && selectedCourses.push(c);\r\n        });\r\n\r\n        console.log(selectedCourses);\r\n        const schedules = selectedCourses.length > 0 && (new ScheduleTree(selectedCourses)).calendarify();\r\n        this.setState({\r\n            scheduleCombinations: schedules,\r\n            num: 0\r\n        });\r\n    }\r\n\r\n    handleRangeChange(event) {\r\n        let val = event.target.value ;\r\n        if(event.target.type === \"number\") val--;\r\n        this.setState({ num: val});\r\n    }\r\n\r\n    showSlider() {\r\n        if (this.state.scheduleCombinations && this.state.scheduleCombinations.length > 0) {\r\n            return (\r\n                <div className=\"space-bottom\">\r\n                    <input type=\"range\" className=\"slider\" min=\"0\"  value={this.state.num} max={this.state.scheduleCombinations.length-1} onChange={val => this.handleRangeChange(val)}></input>\r\n                    <input type=\"number\" className=\"slider-n\" min=\"1\"  value={(parseInt(this.state.num,10) + 1)} max={this.state.scheduleCombinations.length} onChange={val=> this.handleRangeChange(val)}></input> / {this.state.scheduleCombinations.length}\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"space-bottom\">\r\n                    Please Select Courses <span role=\"img\" aria-label=\"smiley face\">🙂</span> \r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"calendar-container\">\r\n                {this.showSlider()}\r\n                <div className=\"calendar\">\r\n                    <BigCalendar\r\n                        events={this.state.scheduleCombinations.length > 0 ? this.state.scheduleCombinations[this.state.num] : []}\r\n                        min={week.day(\"Monday\").hour(8).minute(30).toDate()}\r\n                        max={week.day(\"Monday\").hour(22).minute(0).toDate()}\r\n                        defaultDate={week.toDate()}\r\n                        defaultView='work_week'\r\n                        views={{ work_week: true }}\r\n                        timeslots={3}\r\n                        selectable='ignoreEvents'\r\n                        toolbar={false}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport Select from 'react-select';\r\nimport './Control.css';\r\nimport course from '../components/helpers/CourseMapper';\r\nimport { store } from '../store';\r\nimport \"./helpers/Tree\";\r\n\r\n\r\nlet options = [];\r\nexport default class Control extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      value: [],\r\n      mode: 0,\r\n    }\r\n\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.updateCourses(0);\r\n  }\r\n\r\n\r\n  updateCourses(val) {\r\n    const index = val;\r\n    options = [];\r\n    course[index].courses.forEach(course => {\r\n      options.push(\r\n        {\r\n          label: `${course.course_code} | ${course.course_title}`,\r\n          value: course.course_code\r\n        }\r\n      )\r\n    });\r\n  }\r\n\r\n  handleSelectChange(value) {\r\n    store.dispatch({\r\n      type: \"UPDATE\",\r\n      courses: value.split(\",\")\r\n    });\r\n    this.setState({ value: value });\r\n  }\r\n\r\n  handleSwitchChange(val) {\r\n    store.dispatch({\r\n      type: \"MODE\",\r\n      mode: val\r\n    });\r\n    this.updateCourses(val);\r\n\r\n    this.setState({ mode: val, value: [] });\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.className}>\r\n        <h1> uOttawa Course Schedule Generator</h1>\r\n        <div>\r\n          <div>\r\n            <h2>Select Term:</h2>\r\n            <input type=\"radio\" id=\"Fall\"\r\n              name=\"mode\" value=\"0\" defaultChecked onChange={() => this.handleSwitchChange(0)} />\r\n            <label htmlFor=\"Fall\">Fall 2019</label>\r\n            <br />\r\n            <input type=\"radio\" id=\"Winter\"\r\n              name=\"mode\" value=\"1\" onChange={() => this.handleSwitchChange(1)} />\r\n            <label htmlFor=\"Winter\">Winter 2020</label>\r\n          </div>\r\n          <br />\r\n          <Select\r\n            multi\r\n            onChange={(val) => this.handleSelectChange(val)}\r\n            options={options}\r\n            placeholder=\"Select Course(s)\"\r\n            simpleValue\r\n            value={this.state.value}\r\n\r\n          />\r\n        </div>\r\n      </div >\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport Calendar from \"./components/Calendar\";\r\nimport './App.css';\r\nimport Control from './components/Control';\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"grid-container\">\r\n        <Control className=\"control\"/>\r\n        <Calendar className=\"calendar\" />\r\n        {console.log(\"%cHey, thanks for using the app. Want to make it better? https://github.com/digized/schedule-generator 😉\", \"background: linear-gradient(red,blue);display:block;color:white;font-size:20pt;\")}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}